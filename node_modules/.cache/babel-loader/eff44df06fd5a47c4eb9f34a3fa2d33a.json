{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/nathan/Projects/RoomCompany/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./style.css';import axios from'axios';var TYPE_COLORS={bug:'B1C12E',dark:'4F3A2D',dragon:'755EDF',electric:'FCBC17',fairy:'F4B1F4',fighting:'823551',fire:'F08030',flying:'A3B3F7',ghost:'6060B2',grass:'74C236',ground:'D3B357',ice:'A3E7FD',normal:'C8C4BC',poison:'934594',psychic:'ED4882',rock:'B9A156',steel:'B5B5C3',water:'3295F6'};//function to circumvent the split in Ho-ho\nfunction pokemonNameSplit(name){if(name.length>5){return name.split('-',1);}else{return name;}}var Row=/*#__PURE__*/function(_Component){_inherits(Row,_Component);var _super=_createSuper(Row);function Row(){var _this;_classCallCheck(this,Row);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={name:'',imageUrl:'',pokemonIndex:'',types:[]};return _this;}_createClass(Row,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this$props,name,url,pokemonIndex,imageUrl,pokemonUrl,pokemonRes,types;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=this.props,name=_this$props.name,url=_this$props.url;pokemonIndex=url.split('/')[url.split('/').length-2];imageUrl=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(pokemonIndex,\".png\");pokemonUrl=\"https://pokeapi.co/api/v2/pokemon/\".concat(pokemonIndex,\"/\");_context.next=6;return axios.get(pokemonUrl);case 6:pokemonRes=_context.sent;types=pokemonRes.data.types.map(function(type){return type.type.name;});this.setState({name:name,imageUrl:imageUrl,pokemonIndex:pokemonIndex,types:types});case 9:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"a\",{className:\"pokeRow\",href:\"http://localhost:3000/Pokemon/\".concat(this.state.pokemonIndex),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"arrowHover\",children:\">\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"index\",children:[\"#\",(\"000\"+this.state.pokemonIndex).slice(-3)]}),/*#__PURE__*/_jsx(\"p\",{className:\"name\",children:pokemonNameSplit(this.state.name)}),this.state.types.map(function(type){return/*#__PURE__*/_jsx(\"span\",{style:{backgroundColor:\"#\".concat(TYPE_COLORS[type]),color:'white'},className:\"type\",children:type},type);}),/*#__PURE__*/_jsx(\"img\",{className:\"sprite\",src:this.state.imageUrl,alt:\"Pokemon Sprite\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"arrowHover\",children:\"<\"})]});}}]);return Row;}(Component);// {this.state.types.map(type=>(\n//     type.slot.type.name\n// ))}\nexport{Row as default};","map":{"version":3,"sources":["/home/nathan/Projects/RoomCompany/react-pokedex/src/components/Row/index.js"],"names":["React","Component","axios","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","pokemonNameSplit","name","length","split","Row","state","imageUrl","pokemonIndex","types","props","url","pokemonUrl","get","pokemonRes","data","map","type","setState","slice","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './style.css';\nimport axios from 'axios';\n\n\n\nconst TYPE_COLORS = {\n    bug : 'B1C12E',\n    dark: '4F3A2D',\n    dragon: '755EDF',\n    electric: 'FCBC17',\n    fairy: 'F4B1F4',\n    fighting: '823551',\n    fire: 'F08030',\n    flying: 'A3B3F7',\n    ghost: '6060B2',\n    grass: '74C236',\n    ground: 'D3B357',\n    ice: 'A3E7FD',\n    normal: 'C8C4BC',\n    poison: '934594',\n    psychic: 'ED4882',\n    rock: 'B9A156',\n    steel: 'B5B5C3',\n    water: '3295F6'\n  };\n\n   //function to circumvent the split in Ho-ho\nfunction pokemonNameSplit(name){\n  if(name.length > 5){\n   return name.split('-',1)\n  }else{\n    return name\n  }\n}    \n\n\nexport default class Row extends Component{\n    state = {\n        name: '',\n        imageUrl: '',\n        pokemonIndex: '',\n        types:[]\n    }\n\n    async componentDidMount(){\n        const {name,url} = this.props;\n     \n        const pokemonIndex = url.split('/')[url.split('/').length -2];\n        const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonIndex}.png`;\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n        \n        const pokemonRes = await axios.get(pokemonUrl);\n        const types = pokemonRes.data.types.map(type => type.type.name);\n\n\n        this.setState({\n            name,\n            imageUrl,\n            pokemonIndex,\n            types\n        }); \n    }\n\n\n    \n    render(){\n\n        return(\n            <a className=\"pokeRow\"\n                href={`http://localhost:3000/Pokemon/${this.state.pokemonIndex}`}\n            >\n            \n             <h4 className=\"arrowHover\">    \n               &gt;\n             </h4>\n                <p className=\"index\">#{(\"000\"+this.state.pokemonIndex).slice(-3)}</p>\n                \n                <p className=\"name\">{pokemonNameSplit(this.state.name)}</p>\n               \n\n                {this.state.types.map(type => (\n                    <span \n                    key={type} \n                    style={{ backgroundColor: `#${TYPE_COLORS[type]}`, color: 'white'}}\n                    className=\"type\"\n                    >\n                      {type}\n                    </span>\n                  ))}\n\n\n           \n                <img className='sprite' \n                src={this.state.imageUrl} \n                alt=\"Pokemon Sprite\"\n                \n              \n                />\n\n              <h4 className=\"arrowHover\">    \n              &lt;\n             </h4>\n            </a>\n        );\n    }\n}\n// {this.state.types.map(type=>(\n//     type.slot.type.name\n// ))}"]},"metadata":{},"sourceType":"module"}